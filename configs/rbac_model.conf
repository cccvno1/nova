# RBAC with Domains Model
# 支持多租户/多域的角色访问控制模型

[request_definition]
# sub: 主体（用户ID）
# dom: 域/租户（用于多租户隔离）
# obj: 资源对象（如 /api/users, /api/orders）
# act: 操作（read, write, delete 等）
r = sub, dom, obj, act

[policy_definition]
# 策略定义：主体在某个域中对某个资源有某个操作权限
p = sub, dom, obj, act

[role_definition]
# 角色定义：支持域隔离的角色继承
# g: 用户-角色关系（user, role, domain）
# g2: 角色-角色关系，支持角色层级继承（role1, role2, domain）
g = _, _, _
g2 = _, _, _

[policy_effect]
# 策略效果：只要有一条策略允许就允许
e = some(where (p.eft == allow))

[matchers]
# 匹配器：检查用户是否有权限
# 1. 检查用户的角色（支持角色继承）
# 2. 使用 keyMatch2 匹配资源路径（支持通配符）
# 3. 检查操作是否匹配（支持通配符）
m = g(r.sub, p.sub, r.dom) && r.dom == p.dom && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)
