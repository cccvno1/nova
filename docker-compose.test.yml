version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: nova-postgres-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nova
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nova-network

  redis:
    image: redis:7-alpine
    container_name: nova-redis-test
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - nova-network

  nova-server:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: nova-server-test
    environment:
      NOVA_DATABASE_HOST: postgres
      NOVA_DATABASE_PORT: 5432
      NOVA_DATABASE_USER: postgres
      NOVA_DATABASE_PASSWORD: postgres
      NOVA_DATABASE_DBNAME: nova
      NOVA_REDIS_HOST: redis
      NOVA_REDIS_PORT: 6379
      NOVA_SERVER_HOST: 0.0.0.0
      NOVA_SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - nova-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  nova-network:
    driver: bridge
